package dms;

import java.util.*;
import org.bson.Document;
import com.mongodb.client.*;
import com.mongodb.client.model.Filters; 
import com.mongodb.client.model.Updates;  

public class MONGOCONN {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase database = mongoClient.getDatabase("DMS");
        MongoCollection<Document> collection = database.getCollection("Students");

        int response;
        do {
            System.out.println("1. Display");
            System.out.println("2. Insert");
            System.out.println("3. Update");
            System.out.println("4. Delete");
            System.out.println("5. Exit");
            response = sc.nextInt();
            switch (response) {
                case 1:
                	 for (Document document : collection.find()) {
                	        System.out.println("Name: " + document.getString("name") + ", branch: " + document.getString("branch"));
                	    }
                    break;
                case 2:
                    System.out.println("Enter name: ");
                    String name = sc.next();
                    System.out.println("Enter branch: ");
                    String branch = sc.next();
                    collection.insertOne(new Document("name", name).append("branch", branch));
                    break;
                case 3:
                	 System.out.println("1. Update Name\n2. Update Branch");
                	    int response2 = sc.nextInt();
                	    System.out.println("Enter name to update: ");
                	    String updateName = sc.next();
                	    System.out.println("Enter new value: ");
                	    String newValue = sc.next();

                	    if (response2 == 1) {
                	        collection.updateOne(Filters.eq("name", updateName), Updates.set("name", newValue));
                	    } else if (response2 == 2) {
                	        collection.updateOne(Filters.eq("name", updateName), Updates.set("branch", newValue));
                	    } else {
                	        System.out.println("Invalid update option.");
                	    }
                    break;
                case 4:
                    System.out.println("Enter name to delete: ");
                    String deleteName = sc.next();
                    collection.deleteOne(Filters.eq("name", deleteName));
                    break;
                case 5:
                    sc.close();
                    mongoClient.close();
                    break;
                default:
                    System.out.println("Incorrect Response");
            }
        } while (response != 5);
    }
}
